{"version":3,"file":"static/js/47.eb64e6ed.chunk.js","mappings":"kOAGiC,SAAAA,IAOhC,OAPgCA,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAjC,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE+BC,EAAAA,EAAAA,IAAU,yDAADC,OAA0DC,EAAAA,IAAW,KAAD,EAAtF,OAARP,EAAQE,EAAAM,KAAAN,EAAAO,OAAA,SACPT,EAASU,KAAKC,SAAO,OAAAT,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAE5BW,QAAQC,IAAGZ,EAAAU,IAAQ,yBAAAV,EAAAa,OAAA,GAAAhB,EAAA,mBAE1BiB,MAAA,KAAAC,UAAA,CAED,MAX0B,WAEO,OAAAtB,EAAAqB,MAAC,KAADC,UAAA,E,kBCD3BC,GAAoBC,EAAAA,EAAAA,OAAK,kBAAM,4BAAyC,IA8B9E,EA3Ba,WACT,IAAAC,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GAEhCI,EAAU,eAAAC,GAAA/B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAA6B,EAAA,OAAA/B,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESyB,IAAqB,KAAD,EAA7B,OAALD,EAAK1B,EAAAM,KAAAN,EAAAO,OAAA,SACJmB,GAAK,OAAA1B,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAEZW,QAAQC,IAAGZ,EAAAU,IAAQ,yBAAAV,EAAAa,OAAA,GAAAhB,EAAA,kBAE1B,kBAPe,OAAA4B,EAAAX,MAAA,KAAAC,UAAA,KAehB,OANAa,EAAAA,EAAAA,YAAU,WACNJ,IAAaK,MAAK,SAAAH,GACdH,EAAiBG,EACrB,GACJ,GAAG,KAGCI,EAAAA,EAAAA,KAAA,QAAAC,UACID,EAAAA,EAAAA,KAACE,EAAAA,SAAQ,CAACC,UAAUH,EAAAA,EAAAA,KAAA,OAAAC,SAAK,2CAA6CA,UACtED,EAAAA,EAAAA,KAACd,EAAiB,CAACkB,KAAMZ,OAIrC,C,oBC7BA,IADgB,kC","sources":["fetches/fetchTrendingFilms.js","pages/Home.jsx","utils/api.key.js"],"sourcesContent":["import API_KEY from \"utils/api.key\";\nimport axios from 'axios';\n\nasync function fetchTrendindFilms() {\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch(error) {\n        console.log(error);\n    }\n};\n\nexport default fetchTrendindFilms;\n","import fetchTrendindFilms from \"../fetches/fetchTrendingFilms\";\nimport { useEffect, useState, lazy, Suspense } from \"react\";\nconst TrendingFilmsList = lazy(() => import('../components/TrendingFilmsList'));\n\n\nconst Home = () => {\n    const [trendingFilms, setTrendingFilms] = useState([]);\n\n    const fetchFilms = async () => {\n        try {\n            const films = await fetchTrendindFilms();\n            return films;\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        fetchFilms().then(films => {\n            setTrendingFilms(films);\n        });\n    }, []);\n\n    return (\n        <main>\n            <Suspense fallback={<div>Please wait, the movie list is loading</div>}>\n            <TrendingFilmsList list={trendingFilms} />\n            </Suspense>\n        </main>\n    );\n};\n\nexport default Home;","const API_KEY = '7bb2eceb0e28c427492123880ced91c1';\nexport default API_KEY;"],"names":["_fetchTrendindFilms","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","concat","API_KEY","sent","abrupt","data","results","t0","console","log","stop","apply","arguments","TrendingFilmsList","lazy","_useState","useState","_useState2","_slicedToArray","trendingFilms","setTrendingFilms","fetchFilms","_ref","films","fetchTrendindFilms","useEffect","then","_jsx","children","Suspense","fallback","list"],"sourceRoot":""}