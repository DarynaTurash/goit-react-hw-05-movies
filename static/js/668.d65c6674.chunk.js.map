{"version":3,"file":"static/js/668.d65c6674.chunk.js","mappings":"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","sources":["components/NoInformation.jsx","components/QueryList.styled.js","components/QueryList.jsx","fetches/fetchSearchQueryFilms.js","components/SearchBox.styled.js","components/SearchBox.jsx","pages/Movies.jsx","pages/NotFound.styled.js","utils/api.key.js"],"sourcesContent":["import { Container, Section } from \"../commonStyles/ContainerAndSection\";\nimport { BackLink } from \"../pages/NotFound.styled\";\n\nconst NoInformation = () => {\n    return (\n        <Section>\n            <Container>\n            <h1>Sorry, we did not get any information</h1>\n            <BackLink to='/'>Go back to main page</BackLink>\n            </Container>\n        </Section>\n    );\n};\n\nexport default NoInformation;","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const List = styled.ul`\npadding-left: 25px;\n`;\n\nexport const FilmLink = styled(Link)`\ntext-decoration: 0;\ncursor: pointer;\ncolor: black;\ntransition: font-weight 250ms cubic-bezier(0.25, 0.1, 0.25, 1), transform 250ms cubic-bezier(0.25, 0.1, 0.25, 1);\n\n\n&:hover,\n&:focus {\ncolor: #FE9A05;\nfont-weight: 800;\ntransform: scale(1.1);\n}`;","import { useLocation } from \"react-router-dom\";\nimport { Container } from \"../commonStyles/ContainerAndSection\";\nimport { List, FilmLink } from \"../components/QueryList.styled\";\nimport PropTypes from 'prop-types';\n\nconst SearchQueryList = ({ list }) => {\n    const location = useLocation();\n    return (\n        <Container>\n            <List>\n                {list.map((film) => (<li key={film.id}><FilmLink to={`/movies/${film.id}`} state={{ from: location }}>{film.original_title || film.name}</FilmLink></li> ))}\n            </List>\n        </Container>\n    );\n};\n\nSearchQueryList.propTypes = {\n    list: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number.isRequired,\n          original_title: PropTypes.string,\n          name: PropTypes.string,\n        })),\n};\n\nexport default SearchQueryList;","import API_KEY from \"utils/api.key\";\nimport axios from 'axios';\n\nconst fetchSearchQueryFilms = async (searchQuery) => {\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${searchQuery}&api_key=${API_KEY}`);\n        return response.data.results;\n    } catch(error) {\n        console.log(error);\n    }\n};\n\nexport default fetchSearchQueryFilms;","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Input = styled.input`\nfont-size: 16px;\nwidth: 250px;\npadding: 10px 15px 10px 15px;\nborder-radius: 10px;\nborder: 1px solid black;\ntransition: border-color 250ms cubic-bezier(0.25, 0.1, 0.25, 1);\noutline: none;\n\n&:hover,\n&:focus,\n&:active {\n    border-color: #FE9A05;\n}\n`;\n\nexport const ButtonLink = styled(Link)`\ncolor: white;\nbackground-color: #FE9A05;\nborder-radius: 10px;\npadding: 10px 15px 10px 15px;\ntext-decoration: none;\n\n&:hover,\n&:focus {\n    background-color: black;\n}\n`;\n\nexport const Form = styled.form`\ndisplay: flex;\nalign-items: center;\njustify-content: start;\ngap: 10px;\n`;","import { Input, ButtonLink, Form } from \"../components/SearchBox.styled\";\nimport { Container, Section } from \"../commonStyles/ContainerAndSection\";\nimport PropTypes from 'prop-types';\n\nconst SearchBox = ({ query, onSearch, onChange }) => {\n    return (\n        <Section>\n            <Container>\n                <Form onSubmit={onSearch}>\n                    <Input\n                        type=\"text\"\n                        value={query}\n                        onChange={event => onChange(event.target.value)}\n                        autoFocus\n                        placeholder=\"Enter the title of the movie...\"\n                    />\n                    <ButtonLink to={`/movies?movieName=${query}`}>\n                        Search\n                    </ButtonLink>\n                </Form>\n            </Container>\n        </Section>\n    );\n};\n\nSearchBox.propTypes = {\n    query: PropTypes.string,\n    onSearch: PropTypes.func,\n    onChange: PropTypes.func,\n};\n\nexport default SearchBox;","import { useState, useEffect } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport SearchQueryList from \"../components/QueryList\";\nimport fetchSearchQueryFilms from \"fetches/fetchSearchQueryFilms\";\nimport SearchBox from \"../components/SearchBox\";\nimport Notiflix from 'notiflix';\nimport Loader from \"../components/Loader\";\nimport Error404 from \"components/NoInformation\";\n\nconst Movies = () => {\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [foundedFilms, setFoundedFilms] = useState([]);\n    const [status, setStatus] = useState('idle');\n    const [searchParams] = useSearchParams();\n    const queryParam = searchParams.get('movieName');\n    const navigate = useNavigate();\n\n    const handleSearch = event => {\n        event.preventDefault();\n\n        if(searchQuery === '') {\n            Notiflix.Notify.info(\"Please, enter something into field\");\n            return;\n        } else {\n            navigate(`/movies?movieName=${encodeURIComponent(searchQuery)}`);\n        }   \n    };\n\n    useEffect(() => {\n        if (queryParam) {\n            const fetchAndSetFilms = async () => {\n                try {\n                    setStatus('pending'); \n    \n                    const dataFilms = await fetchSearchQueryFilms(queryParam);\n                    \n                    if (dataFilms.length === 0) {\n                        Notiflix.Notify.warning('Sorry, there are no matches. Please, check if the title you wrote is correct.');\n                        setStatus('idle');\n                        navigate('/movies');\n                        setFoundedFilms([]);\n                        setSearchQuery('');\n                    } else {\n                        setStatus('resolved');\n                        setFoundedFilms(dataFilms);\n                    }\n                } catch (error) {\n                    setStatus('rejected');\n                }\n            };\n    \n            fetchAndSetFilms();\n            setSearchQuery(queryParam);\n        }\n    }, [queryParam, navigate]);\n\n    return (\n        <main>\n            <SearchBox query={searchQuery} onSearch={handleSearch} onChange={setSearchQuery} />\n            {status === \"pending\" && <Loader />}\n            {status === \"resolved\" && <SearchQueryList list={foundedFilms} />}\n            {status === 'rejected' && <Error404 />}\n        </main>\n    );\n};\n\nexport default Movies;","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const BackLink = styled(Link)`\nwidth: 180px;\ndisplay: block;\ntext-decoration: none;\ntext-align: center;\nbackground-color: #FE9A05;\ncolor: white;\nborder-radius: 10px;\npadding: 10px 15px 10px 15px;\nmargin: 0;\nmargin-bottom: 15px;\ntransition: background-color 250ms cubic-bezier(0.25, 0.1, 0.25, 1);\n\n&:hover,\n&:focus {\n    background-color: black;\n}\n`;","const API_KEY = '7bb2eceb0e28c427492123880ced91c1';\nexport default API_KEY;"],"names":["_jsx","Section","children","_jsxs","Container","BackLink","to","List","styled","_templateObject","_taggedTemplateLiteral","FilmLink","Link","_templateObject2","_ref","list","location","useLocation","map","film","concat","id","state","from","original_title","name","fetchSearchQueryFilms","_asyncToGenerator","_regeneratorRuntime","mark","_callee","searchQuery","response","wrap","_context","prev","next","axios","API_KEY","sent","abrupt","data","results","t0","console","log","stop","_x","apply","arguments","Input","ButtonLink","Form","_templateObject3","query","onSearch","onChange","onSubmit","type","value","event","target","autoFocus","placeholder","_useState","useState","_useState2","_slicedToArray","setSearchQuery","_useState3","_useState4","foundedFilms","setFoundedFilms","_useState5","_useState6","status","setStatus","_useSearchParams","useSearchParams","queryParam","get","navigate","useNavigate","useEffect","fetchAndSetFilms","dataFilms","length","Notiflix","SearchBox","preventDefault","encodeURIComponent","Loader","SearchQueryList","Error404"],"sourceRoot":""}