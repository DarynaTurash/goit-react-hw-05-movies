{"version":3,"file":"static/js/531.50fad515.chunk.js","mappings":"6OAGMA,EAAY,mCAAG,WAAOC,GAAP,oGAEUC,EAAAA,EAAAA,IAAA,6CAAgDD,EAAhD,4BAA2EE,EAAAA,IAFrF,cAEPC,EAFO,OAGPC,EAAOD,EAASC,KAEhBC,EAAgBD,EAAKE,QAAQC,KAAI,SAAAC,GAAM,MAAK,CAC9CC,OAAQD,EAAOC,OACfC,KAAMF,EAAOG,QACbC,GAAIJ,EAAOI,GAH8B,IALhC,kBAWNP,GAXM,gCAabQ,QAAQC,IAAR,MAba,yDAAH,sDAiBlB,I,SCXA,EATwB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAML,EAAW,EAAXA,KAC7B,OACC,4BACG,0BAAI,WAASK,MACb,uBAAIL,MAGX,E,kBCqCD,EAtCgB,WACZ,OAA0CM,EAAAA,EAAAA,UAAS,IAAnD,eAAOX,EAAP,KAAsBY,EAAtB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACQnB,GAAYoB,EAAAA,EAAAA,MAAZpB,QACFqB,GAAWC,EAAAA,EAAAA,MAGXC,EAAyB,mCAAG,WAAOX,GAAP,gGAEJb,EAAaa,GAFT,OAIJ,KAFhBY,EAFoB,QAIfC,QACPN,GAAa,GACbF,EAAiB,MAEjBE,GAAa,GACbF,EAAiBO,IATK,gDAY1BX,QAAQC,IAAR,MAZ0B,yDAAH,sDAoB/B,OAJAY,EAAAA,EAAAA,YAAU,WACNH,EAA0BvB,EAC7B,GAAE,CAACA,EAASqB,KAGT,yBACKH,GACC,uBAAG,6CACH,wBACGb,EAAcE,KAAI,SAAAC,GAAM,OAAK,SAAC,EAAD,CAAiCO,KAAMP,EAAOC,OAAQC,KAAMF,EAAOE,MAA7CF,EAAOI,GAAlC,OAIxC,C,oBCzCD,IADgB,kC","sources":["fetches/fetchReviews.js","components/ReviewOneAuthor.jsx","components/Reviews.jsx","utils/api.key.js"],"sourcesContent":["import API_KEY from \"utils/api.key\";\nimport axios from 'axios';\n\nconst fetchReviews = async (movieId) => {\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`);\n        const data = response.data;\n\n        const reviewDetails = data.results.map(review => ({\n            author: review.author,\n            text: review.content,\n            id: review.id,\n        }));\n        \n        return reviewDetails;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport default fetchReviews;","const ReviewOneAuthor = ({ name, text }) => {\n    return (\n     <div>\n        <h4>Author: {name}</h4>\n        <p>{text}</p>\n     </div>\n    );\n};\n\nexport default ReviewOneAuthor;","import fetchReviews from \"fetches/fetchReviews\";\nimport ReviewOneAuthor from \"../components/ReviewOneAuthor\";\nimport { useState, useEffect } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\n\n\nconst Reviews = () => {\n    const [reviewDetails, setReviewDetails] = useState([]);\n    const [noReviews, setNoReviews] = useState(false);\n    const { movieId } = useParams();\n    const location = useLocation();\n\n\n    const fetchAndSetReviewsDetails = async (id) => {\n        try {\n            const details = await fetchReviews(id);\n            \n            if(details.length === 0) {\n                setNoReviews(true);\n                setReviewDetails([]);\n            } else {\n                setNoReviews(false);\n                setReviewDetails(details);\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        fetchAndSetReviewsDetails(movieId);\n    }, [movieId, location]);\n\n    return (\n        <div>\n            {noReviews\n            ? <p>There are no reviews for this movie yet</p>\n            : <ul>\n                {reviewDetails.map(review => (<ReviewOneAuthor key={review.id} name={review.author} text={review.text} />))}\n            </ul>}\n        </div>\n    );\n};\n\nexport default Reviews;","const API_KEY = '7bb2eceb0e28c427492123880ced91c1';\nexport default API_KEY;"],"names":["fetchReviews","movieId","axios","API_KEY","response","data","reviewDetails","results","map","review","author","text","content","id","console","log","name","useState","setReviewDetails","noReviews","setNoReviews","useParams","location","useLocation","fetchAndSetReviewsDetails","details","length","useEffect"],"sourceRoot":""}