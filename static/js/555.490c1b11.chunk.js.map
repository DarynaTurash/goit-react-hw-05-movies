{"version":3,"file":"static/js/555.490c1b11.chunk.js","mappings":"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","sources":["fetches/fetchCastDetails.js","components/CastOneActor.styled.js","components/CastOneActor.jsx","components/Cast.styled.js","components/Cast.jsx","utils/api.key.js"],"sourcesContent":["import API_KEY from \"utils/api.key\";\nimport axios from 'axios';\n\nconst fetchCastDetails = async (movieId) => {\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`);\n        const data = response.data;\n\n        const castDetails = data.cast.map(actorInfo => ({\n            name: actorInfo.name,\n            profile_path: actorInfo.profile_path,\n            character: actorInfo.character\n        }));\n        \n        return castDetails;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport default fetchCastDetails;","import styled from \"styled-components\";\n\nexport const ImageWrapper = styled.div`\nflex-shrink: 0;\nwidth: 230px;\nheight: 270px;\noverflow: hidden;\n`;\n\nexport const Image = styled.img`\ndisplay: block;\nwidth: 100%;\nheight: 100%;\nobject-fit: cover;\n`;\n\nexport const Item = styled.li`\nwidth: calc((100% - 80px) / 5);\n`;\n\nexport const Name = styled.p`\nfont-size: 21px;\nfont-weight: 600;\ntext-align: center;\nmargin: 0;\n`;\n\nexport const Character = styled.p`\ntext-align: center;\nmargin: 0;\nmargin-top: 10px;\n`;\n\nexport const Wrapper = styled.div`\npadding: 15px;\n`;\n\n","import { ImageWrapper, Image, Item, Name, Character, Wrapper } from \"../components/CastOneActor.styled\";\nimport userNotFoundedImage from \"../images/user.jpg\";\nimport PropTypes from 'prop-types';\n\nconst CastOneActor = ({ name, photo, character }) => {\n    return (\n    <Item>\n    <ImageWrapper>\n        {photo ? <Image src={`https://image.tmdb.org/t/p/original/${photo}`} alt={name} /> : <Image src={userNotFoundedImage} alt=\"User is not found\" />}\n    </ImageWrapper>\n    <Wrapper>\n    <Name>{name}</Name>\n    <Character>Character: {character}</Character>\n    </Wrapper>\n    </Item>\n    );\n};\n\nCastOneActor.propTypes = {\n    name: PropTypes.string.isRequired,\n    photo: PropTypes.string,\n    character: PropTypes.string.isRequired,\n};\n\nexport default CastOneActor;","import styled from \"styled-components\";\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\ngap: 20px;\nlist-style: none;\npadding: 0;\nmargin: 0;\n`;","import fetchCastDetails from \"fetches/fetchCastDetails\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport CastOneActor from \"./CastOneActor\";\nimport { Container, Section } from \"../commonStyles/ContainerAndSection\";\nimport { List } from \"../components/Cast.styled\";\n\nconst Cast = () => {\n    const [castDetails, setCastDetails] = useState([]);\n    const { movieId } = useParams();\n    const location = useLocation();\n\n\n    const fetchAndSetCastDetails = async (id) => {\n        try {\n            const details = await fetchCastDetails(id);\n            setCastDetails(details); \n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        fetchAndSetCastDetails(movieId);\n    }, [movieId, location]);\n\n    return (\n        <Section>\n            <Container>\n            <List>\n                {castDetails.map(oneActor => (\n                    <CastOneActor\n                        key={oneActor.name}\n                        name={oneActor.name}\n                        photo={oneActor.profile_path}\n                        character={oneActor.character}\n                    />\n                ))}\n            </List>\n            </Container>\n        </Section>\n    );\n};\n\nexport default Cast;","const API_KEY = '7bb2eceb0e28c427492123880ced91c1';\nexport default API_KEY;"],"names":["fetchCastDetails","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movieId","response","data","castDetails","wrap","_context","prev","next","axios","concat","API_KEY","sent","cast","map","actorInfo","name","profile_path","character","abrupt","t0","console","log","stop","_x","apply","arguments","ImageWrapper","styled","_templateObject","_taggedTemplateLiteral","Image","_templateObject2","Item","_templateObject3","Name","_templateObject4","Character","_templateObject5","Wrapper","_templateObject6","photo","_jsxs","children","_jsx","src","alt","List","_useState","useState","_useState2","_slicedToArray","setCastDetails","useParams","location","useLocation","fetchAndSetCastDetails","id","details","useEffect","Section","Container","oneActor","CastOneActor"],"sourceRoot":""}